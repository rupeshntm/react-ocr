{"ast":null,"code":"var _regeneratorRuntime = require(\"/Users/rupeshchavan/Desktop/react-ocr/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/rupeshchavan/Desktop/react-ocr/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar createWorker = require('./createWorker');\n\nvar recognize = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(image, langs, options) {\n    var worker;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            worker = createWorker(options);\n            _context2.next = 3;\n            return worker.load();\n\n          case 3:\n            _context2.next = 5;\n            return worker.loadLanguage(langs);\n\n          case 5:\n            _context2.next = 7;\n            return worker.initialize(langs);\n\n          case 7:\n            return _context2.abrupt(\"return\", worker.recognize(image).finally( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n              return _regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      _context.next = 2;\n                      return worker.terminate();\n\n                    case 2:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee);\n            }))));\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function recognize(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar detect = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(image, options) {\n    var worker;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            worker = createWorker(options);\n            _context4.next = 3;\n            return worker.load();\n\n          case 3:\n            _context4.next = 5;\n            return worker.loadLanguage('osd');\n\n          case 5:\n            _context4.next = 7;\n            return worker.initialize('osd');\n\n          case 7:\n            return _context4.abrupt(\"return\", worker.detect(image).finally( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n              return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                while (1) {\n                  switch (_context3.prev = _context3.next) {\n                    case 0:\n                      _context3.next = 2;\n                      return worker.terminate();\n\n                    case 2:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }\n              }, _callee3);\n            }))));\n\n          case 8:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function detect(_x4, _x5) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nmodule.exports = {\n  recognize: recognize,\n  detect: detect\n};","map":{"version":3,"sources":["/Users/rupeshchavan/Desktop/react-ocr/node_modules/tesseract.js/src/Tesseract.js"],"names":["createWorker","require","recognize","image","langs","options","worker","load","loadLanguage","initialize","finally","terminate","detect","module","exports"],"mappings":";;;;AAAA,IAAMA,YAAY,GAAGC,OAAO,CAAC,gBAAD,CAA5B;;AAEA,IAAMC,SAAS;AAAA,sEAAG,kBAAOC,KAAP,EAAcC,KAAd,EAAqBC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AACVC,YAAAA,MADU,GACDN,YAAY,CAACK,OAAD,CADX;AAAA;AAAA,mBAEVC,MAAM,CAACC,IAAP,EAFU;;AAAA;AAAA;AAAA,mBAGVD,MAAM,CAACE,YAAP,CAAoBJ,KAApB,CAHU;;AAAA;AAAA;AAAA,mBAIVE,MAAM,CAACG,UAAP,CAAkBL,KAAlB,CAJU;;AAAA;AAAA,8CAKTE,MAAM,CAACJ,SAAP,CAAiBC,KAAjB,EACJO,OADI,wEACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACDJ,MAAM,CAACK,SAAP,EADC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,GALS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATT,SAAS;AAAA;AAAA;AAAA,GAAf;;AAWA,IAAMU,MAAM;AAAA,uEAAG,kBAAOT,KAAP,EAAcE,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AACPC,YAAAA,MADO,GACEN,YAAY,CAACK,OAAD,CADd;AAAA;AAAA,mBAEPC,MAAM,CAACC,IAAP,EAFO;;AAAA;AAAA;AAAA,mBAGPD,MAAM,CAACE,YAAP,CAAoB,KAApB,CAHO;;AAAA;AAAA;AAAA,mBAIPF,MAAM,CAACG,UAAP,CAAkB,KAAlB,CAJO;;AAAA;AAAA,8CAKNH,MAAM,CAACM,MAAP,CAAcT,KAAd,EACJO,OADI,wEACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACDJ,MAAM,CAACK,SAAP,EADC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,GALM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAANC,MAAM;AAAA;AAAA;AAAA,GAAZ;;AAWAC,MAAM,CAACC,OAAP,GAAiB;AACfZ,EAAAA,SAAS,EAATA,SADe;AAEfU,EAAAA,MAAM,EAANA;AAFe,CAAjB","sourcesContent":["const createWorker = require('./createWorker');\n\nconst recognize = async (image, langs, options) => {\n  const worker = createWorker(options);\n  await worker.load();\n  await worker.loadLanguage(langs);\n  await worker.initialize(langs);\n  return worker.recognize(image)\n    .finally(async () => {\n      await worker.terminate();\n    });\n};\n\nconst detect = async (image, options) => {\n  const worker = createWorker(options);\n  await worker.load();\n  await worker.loadLanguage('osd');\n  await worker.initialize('osd');\n  return worker.detect(image)\n    .finally(async () => {\n      await worker.terminate();\n    });\n};\n\nmodule.exports = {\n  recognize,\n  detect,\n};\n"]},"metadata":{},"sourceType":"script"}